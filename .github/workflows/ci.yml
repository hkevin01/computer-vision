name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  build-linux:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Install dependencies
      run: |
        sudo apt update
        sudo apt install -y \
          libopencv-dev \
          libopencv-contrib-dev \
          libpcl-dev \
          libgtk-3-dev \
          cmake \
          build-essential
    
    - name: Setup CUDA
      uses: Jimver/cuda-toolkit@v0.2.11
      with:
        cuda: '11.8'
    
    - name: Configure CMake
      run: cmake -B build -DCMAKE_BUILD_TYPE=Release
    
    - name: Build
      run: cmake --build build --config Release
    
    - name: Run tests
      working-directory: build
      run: ./test_stereo_vision

  build-windows:
    runs-on: windows-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup CUDA
      uses: Jimver/cuda-toolkit@v0.2.11
      with:
        cuda: '11.8'
    
    - name: Install vcpkg dependencies
      run: |
        vcpkg install opencv[contrib]:x64-windows
        vcpkg install pcl:x64-windows
    
    - name: Configure CMake
      run: cmake -B build -DCMAKE_TOOLCHAIN_FILE=C:/vcpkg/scripts/buildsystems/vcpkg.cmake
    
    - name: Build
      run: cmake --build build --config Release

  code-quality:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Install clang-format and clang-tidy
      run: |
        sudo apt update
        sudo apt install -y clang-format clang-tidy
    
    - name: Check code formatting
      run: |
        find src include -name "*.cpp" -o -name "*.hpp" -o -name "*.cu" -o -name "*.cuh" | \
        xargs clang-format --dry-run --Werror
    
    - name: Run static analysis
      run: |
        cmake -B build -DCMAKE_EXPORT_COMPILE_COMMANDS=ON
        find src -name "*.cpp" | xargs clang-tidy -p build
