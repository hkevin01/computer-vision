version: "3.8"

services:
  # Main stereo vision application (Backend API)
  api:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
      args:
        - ENABLE_CUDA=${ENABLE_CUDA:-false}
        - ENABLE_HIP=${ENABLE_HIP:-false}
        - BUILDKIT_INLINE_CACHE=1
    image: ${IMAGE_NAME:-stereo-vision:local}
    container_name: ${SERVICE_NAME:-stereo-vision-api}
    restart: unless-stopped
    environment:
      - DISPLAY=${DISPLAY:-:0}
      - QT_QPA_PLATFORM=${QT_QPA_PLATFORM:-offscreen}
      - OPENCV_GENERATE_PKGCONFIG=ON
      - APP_MODE=api
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
      - /tmp/.X11-unix:/tmp/.X11-unix:rw
      - /dev/video0:/dev/video0
      - /dev/video1:/dev/video1
    ports:
      - "${API_PORT:-8080}:8080"
      - "${METRICS_PORT:-8081}:8081"
    devices:
      - /dev/dri:/dev/dri
    networks:
      - stereo-vision-network
    env_file:
      - ${ENV_FILE:-.env}
    profiles:
      - all
      - api
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Web GUI for controlling the application
  gui:
    build:
      context: ${GUI_PATH:-./gui}
      dockerfile: Dockerfile
      target: production
    image: ${GUI_IMAGE_NAME:-stereo-vision-gui:local}
    container_name: ${GUI_SERVICE_NAME:-stereo-vision-gui}
    restart: unless-stopped
    environment:
      - API_URL=http://api:8080
    ports:
      - "${GUI_PORT:-3000}:80"
    networks:
      - stereo-vision-network
    depends_on:
      - api
    profiles:
      - all
      - gui
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 5s
      retries: 3

  # Development service (if DEV_MODE=true)
  gui-dev:
    image: python:3.9-alpine
    container_name: ${GUI_SERVICE_NAME:-stereo-vision-gui}-dev
    restart: unless-stopped
    environment:
      - API_URL=http://api:8080
      - NODE_ENV=development
    volumes:
      - ${GUI_PATH:-./gui}:/app
    working_dir: /app
    ports:
      - "${GUI_PORT:-3000}:3000"
    networks:
      - stereo-vision-network
    depends_on:
      - api
    profiles:
      - dev
    command: ["python", "-m", "http.server", "3000"]

networks:
  stereo-vision-network:
    driver: bridge
    name: stereo-vision-network

volumes:
  stereo-vision-data:
    name: stereo-vision-data
  stereo-vision-logs:
    name: stereo-vision-logs
